Planning:
--------------

  sort filename
  sort 
  
  sort -n filename
  sort -r filename
  sort -t ' ' -k 2 filename
  
  sort -u filename
  sort -R filename
  sort -o filename
  sort -f filename
  sort -c filename

Program Flow: 
-----------------
[1.1a] : Output (program)
  Output: (print sorted data)
  Input : Array: Strings
    ['a','b','c','d']
  Name : displayResult

[1.1b]: error   
  Output : (print error)
  Input : Array
    ['sort: No such file or directory']
  Name: displayError

[1.2] : 
  Output : Array
    ['a','b','c','d']
  Process : according to options
    t => separate the fields
    k => select field
    n => sort according to number
    f => ignore case by sorting time
    r => reverse sort
    u => uniq
    c => check output and loaded contents are same
            if not same tell where is not same as error 
    R => random output 
    o => take input from stdin and write in given file
  Input : Object
    {contents :['b','c','a','d'], options:[]}
  Name: sortContent

[1.3] :
  Output : Object
    a => 
      {contents :['b','c','a','d'], options:[]}
    b => 
      ['sort: No such file or directory']
  Note: 
    if file is not given,
      take input from stdin and make array
    if there is multiple files 
      load all files contents
  Input : Object
    {options: ['-t', ' '], filenames : ['filename']}
  Name: loadContent
  
 
[1.4] :
  Output : Object
    {options: ['-t', ' '], filenames : ['filename']}
  Input : array
    ['-t', ' ', 'filename'];
  Name: validateOptions

